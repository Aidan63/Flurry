{
	"extendsConfigPath": "",
	"defineCombinations": [],
	"defaultSeverity": "INFO",
	"baseDefines": [],
	"version": 1,
	"exclude": {},
	"checks": [
		{
			"type": "ConditionalCompilation",
			"props": {
				"policy": "aligned",
				"allowSingleline": false,
				"severity": "INFO"
			}
		},
		{
			"type": "EmptyBlock",
			"props": {
				"tokens":[
					"CLASS_DEF",
					"ENUM_DEF",
					"ABSTRACT_DEF",
					"TYPEDEF_DEF",
					"INTERFACE_DEF",
					"OBJECT_DECL",
					"FUNCTION",
					"FOR",
					"IF",
					"WHILE",
					"SWITCH",
					"TRY",
					"CATCH"
				],
				"option": "empty",
				"severity": "INFO"
			}
		},
		{
			"type": "DefaultComesLast",
			"props": {
				"severity": "WARNING"
			}
		},
		{
			"type": "HiddenField",
			"props": {
			"ignoreSetter": true,
			"ignoreFormat": "^(main|run)$",
			"ignoreConstructorParameter": true,
			"severity": "ERROR"
			}
		},
		{
			"type": "InnerAssignment",
			"props": {
				"severity": "WARNING",
				"ignoreReturnAssignments": true
			}
		},
		{
			"type": "NullableParameter",
			"props": {
				"option": "questionMark",
				"severity": "ERROR"
			}
		},
		{
			"type": "SimplifyBooleanExpression",
			"props": {
				"severity": "ERROR"
			}
		},
		{
			"type": "SimplifyBooleanReturn",
			"props": {
				"severity": "ERROR"
			}
		},
		{
			"type": "Trace",
			"props": {
				"severity": "INFO"
			}
		},
		{
			"type": "UnusedLocalVar",
			"props": {
				"severity" : "INFO"
			}
		},
		{
			"type" : "TODOComment",
			"props": {
				"format": "TODO|FIXME|HACK|XXX|BUG",
				"severity": "INFO"
			}
		},
		{
			"type" : "EmptyPackage",
			"props": {
				"enforceEmptyPackage": false,
				"severity": "INFO"
			}
		},
		{
			"type": "Interface",
			"props": {
				"allowProperties": false,
				"allowMarkerInterfaces": true,
				"severity": "INFO"
			}
		},
		{
			"type": "UnnecessaryConstructor",
			"props": {
				"severity": "ERROR"
			}
		},
		{
			"type": "AvoidStarImport",
			"props": {
				"severity": "INFO"
			}
		},
		{
			"type": "UnusedImport",
			"props": {
				"severity": "WARNING",
				"ignoreModules": [
					"haxe.macro.Type"
				],
				"moduleTypeMap": {
					"haxe.macro.Expr": [
						"ExprDef",
						"ComplexType"
					]
				}
			}
		},
		{
			"type": "ArrayLiteral",
			"props": {
				"severity": "ERROR"
			}
		},
		{
			"type": "ERegLiteral",
			"props": {
				"severity": "ERROR"
			}
		},
		{
			"type": "HexadecimalLiteral",
			"props": {
				"severity": "INFO",
				"option": "upperCase"
			}
		},
		{
			"type": "MultipleStringLiterals",
			"props": {
				"minLength": 2,
				"ignore": "^\\s+$",
				"allowDuplicates": 2,
				"severity": "WARNING"
			}
		},
		{
			"type": "StringLiteral",
			"props": {
				"policy": "onlySingle",
				"allowException": true,
				"severity": "INFO"
			}
		},
		{
			"type": "RedundantAccessMeta",
			"props": {
				"prohibitMeta": false,
				"severity": "INFO"
			}
		},
		{
			"type": "RedundantAllowMeta",
			"props": {
				"prohibitMeta": false,
				"severity": "INFO"
			}
		},
		{
			"type": "ModifierOrder",
			"props": {
				"severity": "WARNING",
				"modifiers": [
					"MACRO",
					"OVERRIDE",
					"PUBLIC_PRIVATE",
					"STATIC",
					"INLINE",
					"DYNAMIC"
				]
			}
		},
		{
			"type": "RedundantModifier",
			"props": {
				"enforcePublicPrivate": false,
				"enforcePublic": false,
				"enforcePrivate": false,
				"severity": "INFO"
			}
		},
		{
			"type": "CatchParameterName",
			"props": {
				"format": "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$",
				"severity": "WARNING"
			}
		},
		{
			"type": "MemberName",
			"props": {
				"severity": "ERROR",
				"format": "^[a-z][a-zA-Z0-9]*$",
				"tokens": [
					"PUBLIC",
					"PRIVATE",
					"CLASS"
				]
			}
		},
		{
			"type": "ParameterName",
			"props": {
				"severity": "ERROR",
				"format": "^_[a-z][a-zA-Z0-9]*$"
			}
		},
		{
			"type": "TypeName",
			"props": {
				"severity": "ERROR",
				"format": "^[A-Z]+[a-zA-Z0-9]*$",
				"tokens": [
					"CLASS",
					"ENUM",
					"TYPEDEF"
				]
			}
		},
		{
			"type": "TypeName",
			"props": {
				"severity": "ERROR",
				"format": "^I[A-Z]+[a-zA-Z0-9]*$",
				"tokens": [
					"INTERFACE"
				]
			}
		},
		{
			"type": "Anonymous",
			"props": {
				"severity": "ERROR"
			}
		},
		{
			"type": "Dynamic",
			"props": {
				"severity": "INFO"
			}
		},
		{
			"type": "Return",
			"props": {
				"severity": "INFO",
				"allowEmptyReturn": true,
				"enforceReturnType": false,
				"enforceReturnTypeForAnonymous": false
			}
		},
		{
			"type": "Return",
			"props": {
				"severity": "INFO",
				"allowEmptyReturn": true,
				"enforceReturnType": false,
				"enforceReturnTypeForAnonymous": false
			}
		},
		{
			"type": "ArrayAccess",
			"props": {
				"spaceBefore": true,
				"spaceInside": true,
				"severity": "INFO"
			}
		},
		{
			"type": "EmptyLines",
			"props": {
				"requireEmptyLineAfterInterface": true,
				"requireEmptyLineAfterAbstract": true,
				"allowEmptyLineAfterSingleLineComment": true,
				"requireEmptyLineAfterClass": true,
				"allowEmptyLineAfterMultiLineComment": true,
				"max": 1,
				"severity": "INFO"
			}
		},
		{
			"type": "Spacing",
			"props": {
				"severity": "INFO",
				"spaceIfCondition": "should",
				"spaceForLoop": "should",
				"spaceWhileLoop": "should",
				"spaceSwitchCase": "should",
				"spaceCatch": "should",
				"spaceAroundBinop": true,
				"noSpaceAroundUnop": true,
				"ignoreRangeOperator": true
			}
		},
		{
			"type": "TrailingWhitespace",
			"props": {
				"severity": "INFO"
			}
		}
	],
	"numberOfCheckerThreads": 5
}